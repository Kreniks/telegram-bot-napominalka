# Docker Compose для Telegram-бота "Напоминалка" v2.0
version: '3.8'

services:
  # Telegram-бот версии 2.0
  telegram-bot-v2:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-}
        VCS_REF: ${VCS_REF:-}
        VERSION: ${VERSION:-2.0.0}
    container_name: reminder-bot-v2
    restart: unless-stopped
    
    # Переменные окружения для v2.0
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DB_PATH=/app/data/reminders.db
      - LOG_FILE=/app/logs/bot.log
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_MAX_SIZE_MB=${LOG_MAX_SIZE_MB:-50}
      - LOG_BACKUP_COUNT=${LOG_BACKUP_COUNT:-10}
      - CHECK_INTERVAL_SECONDS=${CHECK_INTERVAL_SECONDS:-60}
      - NOTIFICATION_RETRY_ATTEMPTS=${NOTIFICATION_RETRY_ATTEMPTS:-3}
      - HEALTH_CHECK_ENABLED=${HEALTH_CHECK_ENABLED:-true}
      - HEALTH_CHECK_PORT=${HEALTH_CHECK_PORT:-8080}
      - RUN_MODE=${RUN_MODE:-v2}
      - CREATE_BACKUP=${CREATE_BACKUP:-false}
      - LOG_TO_STDOUT=${LOG_TO_STDOUT:-true}
      - BOT_SCRIPT=main_v2.py
      - BOT_VERSION=2.0
    
    # Тома для данных
    volumes:
      - bot_data_v2:/app/data
      - bot_logs_v2:/app/logs
      - bot_backups_v2:/app/backups
    
    # Порты
    ports:
      - "${HEALTH_CHECK_PORT:-8080}:8080"
    
    # Файл с переменными окружения
    env_file:
      - .env
    
    # Проверка здоровья
    healthcheck:
      test: ["CMD", "python", "-c", "
        import sys, os
        sys.path.append('/app')
        try:
            from database_v2 import db_v2
            db_v2.get_reminders_count(1)
            print('Bot v2.0 is healthy')
        except Exception as e:
            print(f'Health check failed: {e}')
            exit(1)
      "]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # Ограничения ресурсов
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    
    # Сеть
    networks:
      - bot_network_v2
    
    # Метки для идентификации
    labels:
      - "bot.version=2.0"
      - "bot.features=multiple-reminders,buttons,extended-formats"

# Именованные тома для v2.0
volumes:
  bot_data_v2:
    driver: local
    labels:
      - "bot.version=2.0"
  bot_logs_v2:
    driver: local
    labels:
      - "bot.version=2.0"
  bot_backups_v2:
    driver: local
    labels:
      - "bot.version=2.0"

# Сеть для v2.0
networks:
  bot_network_v2:
    driver: bridge
    labels:
      - "bot.version=2.0"
