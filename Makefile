# Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Telegram-–±–æ—Ç–æ–º "–ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
DOCKER_COMPOSE = docker-compose
DOCKER_COMPOSE_DEV = docker-compose -f docker-compose.dev.yml
DOCKER_COMPOSE_PROD = docker-compose --profile production
PROJECT_NAME = telegram-reminder-bot
BUILD_DATE = $(shell date -u +"%Y-%m-%dT%H:%M:%SZ")
VCS_REF = $(shell git rev-parse --short HEAD)
VERSION = 1.0.0

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED = \033[0;31m
GREEN = \033[0;32m
YELLOW = \033[0;33m
BLUE = \033[0;34m
NC = \033[0m # No Color

.PHONY: help build up down logs test clean dev prod status health backup

# –ü–æ–º–æ—â—å
help:
	@echo "$(BLUE)Telegram-–±–æ—Ç '–ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞' - Docker Management$(NC)"
	@echo "=================================================="
	@echo ""
	@echo "$(GREEN)–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@echo "  make build     - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã"
	@echo "  make up        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ (–æ–±—ã—á–Ω–∞—è –≤–µ—Ä—Å–∏—è)"
	@echo "  make down      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
	@echo "  make logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
	@echo "  make test      - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
	@echo "  make clean     - –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã"
	@echo ""
	@echo "$(GREEN)–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:$(NC)"
	@echo "  make dev       - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make dev-logs  - –õ–æ–≥–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  make dev-test  - –¢–µ—Å—Ç—ã –≤ dev —Ä–µ–∂–∏–º–µ"
	@echo "  make dev-down  - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å dev –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
	@echo ""
	@echo "$(GREEN)Production:$(NC)"
	@echo "  make prod      - –ó–∞–ø—É—Å—Ç–∏—Ç—å production –≤–µ—Ä—Å–∏—é"
	@echo "  make prod-logs - –õ–æ–≥–∏ production"
	@echo "  make prod-down - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å production"
	@echo ""
	@echo "$(GREEN)–í–µ—Ä—Å–∏—è 2.0:$(NC)"
	@echo "  make v2        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ v2.0"
	@echo "  make v2-logs   - –õ–æ–≥–∏ v2.0"
	@echo "  make v2-down   - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å v2.0"
	@echo "  make v2-test   - –¢–µ—Å—Ç—ã v2.0"
	@echo ""
	@echo "$(GREEN)–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:$(NC)"
	@echo "  make status    - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo "  make health    - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è"
	@echo "  make monitor   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
	@echo "  make backup    - –°–æ–∑–¥–∞—Ç—å backup"
	@echo ""
	@echo "$(GREEN)–£—Ç–∏–ª–∏—Ç—ã:$(NC)"
	@echo "  make shell     - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
	@echo "  make rebuild   - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
check-env:
	@if [ ! -f .env ]; then \
		echo "$(RED)‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!$(NC)"; \
		echo "$(YELLOW)–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example$(NC)"; \
		exit 1; \
	fi
	@if ! grep -q "BOT_TOKEN=" .env || grep -q "BOT_TOKEN=your_bot_token_here" .env; then \
		echo "$(RED)‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!$(NC)"; \
		echo "$(YELLOW)–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env$(NC)"; \
		exit 1; \
	fi
	@echo "$(GREEN)‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è .env –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞$(NC)"

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
build: check-env
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	$(DOCKER_COMPOSE) build \
		--build-arg BUILD_DATE="$(BUILD_DATE)" \
		--build-arg VCS_REF="$(VCS_REF)" \
		--build-arg VERSION="$(VERSION)"
	@echo "$(GREEN)‚úÖ –û–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã$(NC)"

# –°–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–∞
build-prod: check-env
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ Production –æ–±—Ä–∞–∑–∞...$(NC)"
	$(DOCKER_COMPOSE_PROD) build \
		--build-arg BUILD_DATE="$(BUILD_DATE)" \
		--build-arg VCS_REF="$(VCS_REF)" \
		--build-arg VERSION="$(VERSION)"
	@echo "$(GREEN)‚úÖ Production –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω$(NC)"

# –ó–∞–ø—É—Å–∫ –æ–±—ã—á–Ω–æ–π –≤–µ—Ä—Å–∏–∏
up: check-env
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...$(NC)"
	$(DOCKER_COMPOSE) up -d telegram-bot
	@echo "$(GREEN)‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω$(NC)"
	@echo "$(YELLOW)–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: make status$(NC)"
	@echo "$(YELLOW)–õ–æ–≥–∏: make logs$(NC)"

# –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev: check-env
	@echo "$(BLUE)üõ†Ô∏è –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	$(DOCKER_COMPOSE_DEV) up -d
	@echo "$(GREEN)‚úÖ Dev –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ$(NC)"
	@echo "$(YELLOW)Web –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost$(NC)"
	@echo "$(YELLOW)Health check: http://localhost:8080/health$(NC)"
	@echo "$(YELLOW)Debugger port: 5678$(NC)"

# –ó–∞–ø—É—Å–∫ production –≤–µ—Ä—Å–∏–∏
prod: check-env build-prod
	@echo "$(BLUE)üè≠ –ó–∞–ø—É—Å–∫ Production –≤–µ—Ä—Å–∏–∏...$(NC)"
	$(DOCKER_COMPOSE_PROD) up -d telegram-bot-production
	@echo "$(GREEN)‚úÖ Production –±–æ—Ç –∑–∞–ø—É—â–µ–Ω$(NC)"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞
down:
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...$(NC)"
	$(DOCKER_COMPOSE) down
	@echo "$(GREEN)‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"

dev-down:
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –æ–∫—Ä—É–∂–µ–Ω–∏—è...$(NC)"
	$(DOCKER_COMPOSE_DEV) down
	@echo "$(GREEN)‚úÖ Dev –æ–∫—Ä—É–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ$(NC)"

prod-down:
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ production...$(NC)"
	$(DOCKER_COMPOSE_PROD) down
	@echo "$(GREEN)‚úÖ Production –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"

# –õ–æ–≥–∏
logs:
	$(DOCKER_COMPOSE) logs -f telegram-bot

dev-logs:
	$(DOCKER_COMPOSE_DEV) logs -f

prod-logs:
	$(DOCKER_COMPOSE_PROD) logs -f telegram-bot-production

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test: check-env
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	$(DOCKER_COMPOSE) run --rm telegram-bot python test_bot.py
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã$(NC)"

dev-test:
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ dev —Ä–µ–∂–∏–º–µ...$(NC)"
	$(DOCKER_COMPOSE_DEV) run --rm telegram-bot-test
	@echo "$(GREEN)‚úÖ Dev —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã$(NC)"

# –°—Ç–∞—Ç—É—Å
status:
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:$(NC)"
	@docker ps --filter "name=$(PROJECT_NAME)" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
health:
	@echo "$(BLUE)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è...$(NC)"
	@curl -s http://localhost:8080/health | python -m json.tool || echo "$(RED)‚ùå Health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
monitor:
	@echo "$(BLUE)üìä –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...$(NC)"
	$(DOCKER_COMPOSE) run --rm telegram-bot python monitor.py

# Backup
backup:
	@echo "$(BLUE)üíæ –°–æ–∑–¥–∞–Ω–∏–µ backup...$(NC)"
	@docker exec reminder-bot python -c "
from database import db
from datetime import datetime
import shutil
import os

backup_name = f'backup_{datetime.now().strftime(\"%Y%m%d_%H%M%S\")}.db'
backup_path = f'/app/backups/{backup_name}'
os.makedirs('/app/backups', exist_ok=True)
shutil.copy2('/app/data/reminders.db', backup_path)
print(f'‚úÖ Backup —Å–æ–∑–¥–∞–Ω: {backup_path}')
"

# –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
shell:
	@echo "$(BLUE)üêö –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...$(NC)"
	docker exec -it reminder-bot /bin/bash

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
rebuild: down build up
	@echo "$(GREEN)‚úÖ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

# –û—á–∏—Å—Ç–∫–∞
clean:
	@echo "$(BLUE)üßπ –û—á–∏—Å—Ç–∫–∞...$(NC)"
	$(DOCKER_COMPOSE) down -v --rmi all --remove-orphans
	$(DOCKER_COMPOSE_DEV) down -v --rmi all --remove-orphans
	docker system prune -f
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

# –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é
version:
	@echo "$(BLUE)Telegram-–±–æ—Ç '–ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞'$(NC)"
	@echo "–í–µ—Ä—Å–∏—è: $(VERSION)"
	@echo "Build: $(BUILD_DATE)"
	@echo "Git: $(VCS_REF)"

# ============================================================================
# –ö–û–ú–ê–ù–î–´ –î–õ–Ø –í–ï–†–°–ò–ò 2.0
# ============================================================================

# –ó–∞–ø—É—Å–∫ –≤–µ—Ä—Å–∏–∏ 2.0
v2: check-env
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ v2.0...$(NC)"
	@echo "$(YELLOW)‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:$(NC)"
	@echo "$(YELLOW)  - –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è$(NC)"
	@echo "$(YELLOW)  - –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è$(NC)"
	@echo "$(YELLOW)  - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç$(NC)"
	docker-compose -f docker-compose.v2.yml up -d telegram-bot-v2
	@echo "$(GREEN)‚úÖ –ë–æ—Ç v2.0 –∑–∞–ø—É—â–µ–Ω$(NC)"
	@echo "$(YELLOW)–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: make v2-status$(NC)"
	@echo "$(YELLOW)–õ–æ–≥–∏: make v2-logs$(NC)"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ—Ä—Å–∏–∏ 2.0
v2-down:
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ v2.0...$(NC)"
	docker-compose -f docker-compose.v2.yml down
	@echo "$(GREEN)‚úÖ –ë–æ—Ç v2.0 –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"

# –õ–æ–≥–∏ –≤–µ—Ä—Å–∏–∏ 2.0
v2-logs:
	docker-compose -f docker-compose.v2.yml logs -f telegram-bot-v2

# –°—Ç–∞—Ç—É—Å –≤–µ—Ä—Å–∏–∏ 2.0
v2-status:
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ v2.0:$(NC)"
	@docker ps --filter "name=reminder-bot-v2" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

# –¢–µ—Å—Ç—ã –≤–µ—Ä—Å–∏–∏ 2.0
v2-test: check-env
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ v2.0...$(NC)"
	docker-compose -f docker-compose.v2.yml run --rm telegram-bot-v2 python test_bot_v2.py
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç—ã v2.0 –∑–∞–≤–µ—Ä—à–µ–Ω—ã$(NC)"

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ v2.0
v2-rebuild: v2-down
	@echo "$(BLUE)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –±–æ—Ç–∞ v2.0...$(NC)"
	docker-compose -f docker-compose.v2.yml build --no-cache telegram-bot-v2
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ v2.0...$(NC)"
	docker-compose -f docker-compose.v2.yml up -d telegram-bot-v2
	@echo "$(GREEN)‚úÖ –ë–æ—Ç v2.0 –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω$(NC)"

# –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä v2.0
v2-shell:
	@echo "$(BLUE)üêö –í—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä v2.0...$(NC)"
	docker exec -it reminder-bot-v2 /bin/bash

# Health check –¥–ª—è v2.0
v2-health:
	@echo "$(BLUE)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è v2.0...$(NC)"
	@curl -s http://localhost:8080/health | python -m json.tool || echo "$(RED)‚ùå Health check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

# –û—á–∏—Å—Ç–∫–∞ v2.0
v2-clean:
	@echo "$(BLUE)üßπ –û—á–∏—Å—Ç–∫–∞ v2.0...$(NC)"
	docker-compose -f docker-compose.v2.yml down -v --rmi all --remove-orphans
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ v2.0 –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"
