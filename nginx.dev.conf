events {
    worker_connections 1024;
}

http {
    upstream telegram_bot {
        server telegram-bot-dev:8080;
    }

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            proxy_pass http://telegram_bot/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Metrics endpoint
        location /metrics {
            proxy_pass http://telegram_bot/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Status page
        location / {
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Telegram Bot Status</title>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .status { padding: 20px; border-radius: 5px; margin: 10px 0; }
        .healthy { background-color: #d4edda; color: #155724; }
        .error { background-color: #f8d7da; color: #721c24; }
    </style>
</head>
<body>
    <h1>ü§ñ Telegram Bot "–ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞" - Development</h1>
    <div id="status" class="status">–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...</div>
    <div>
        <h3>–î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:</h3>
        <ul>
            <li><a href="/health">Health Check</a></li>
            <li><a href="/metrics">Metrics</a></li>
        </ul>
    </div>
    
    <script>
        fetch("/health")
            .then(response => response.json())
            .then(data => {
                const statusDiv = document.getElementById("status");
                if (data.status === "healthy") {
                    statusDiv.className = "status healthy";
                    statusDiv.innerHTML = "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ<br>–í—Ä–µ–º—è: " + data.timestamp;
                } else {
                    statusDiv.className = "status error";
                    statusDiv.innerHTML = "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º";
                }
            })
            .catch(error => {
                const statusDiv = document.getElementById("status");
                statusDiv.className = "status error";
                statusDiv.innerHTML = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–æ—Ç—É";
            });
    </script>
</body>
</html>';
            add_header Content-Type text/html;
        }
    }
}
